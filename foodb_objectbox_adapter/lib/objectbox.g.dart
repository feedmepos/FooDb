// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'object_box_entity.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 3021689570106315131),
      name: 'AllDocViewDocMetaEntity',
      lastPropertyId: const obx_int.IdUid(3, 5835498232873122842),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 8540705624692014378),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 6009736315792442070),
            name: 'key',
            type: 9,
            flags: 2048,
            indexId: const obx_int.IdUid(1, 2825065807747879183)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 5835498232873122842),
            name: 'value',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(2, 1918954271703562383),
      name: 'AllDocViewKeyMetaEntity',
      lastPropertyId: const obx_int.IdUid(3, 8357916780370056873),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 8238863236660611782),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 8733103804834214230),
            name: 'key',
            type: 9,
            flags: 2048,
            indexId: const obx_int.IdUid(2, 1811533003850621028)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 8357916780370056873),
            name: 'value',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(3, 1973590831734400514),
      name: 'DocEntity',
      lastPropertyId: const obx_int.IdUid(3, 6339596475273150250),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 4473326181232707341),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 7769416710097771877),
            name: 'key',
            type: 9,
            flags: 2048,
            indexId: const obx_int.IdUid(3, 6316172100194881292)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 6339596475273150250),
            name: 'value',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(4, 3804723916077735283),
      name: 'LocalDocEntity',
      lastPropertyId: const obx_int.IdUid(3, 8875595387812754771),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 5998574570340171509),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 355961173367513538),
            name: 'key',
            type: 9,
            flags: 2048,
            indexId: const obx_int.IdUid(4, 8069809380969902740)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 8875595387812754771),
            name: 'value',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(5, 1816147773067204699),
      name: 'SequenceEntity',
      lastPropertyId: const obx_int.IdUid(3, 1233092651565240139),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 8821304901228835362),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 3938403028721403539),
            name: 'key',
            type: 6,
            flags: 8,
            indexId: const obx_int.IdUid(5, 4041288449147310125)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 1233092651565240139),
            name: 'value',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(6, 3148046912633900126),
      name: 'ViewDocMetaEntity',
      lastPropertyId: const obx_int.IdUid(3, 3518627672935492769),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 1043593640599501789),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 9221473796516660758),
            name: 'key',
            type: 9,
            flags: 2048,
            indexId: const obx_int.IdUid(6, 7585772069821342328)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 3518627672935492769),
            name: 'value',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(7, 5065999665789497311),
      name: 'ViewKeyMetaEntity',
      lastPropertyId: const obx_int.IdUid(3, 8587698246806716331),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 8600873610745864091),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 1142135877991697735),
            name: 'key',
            type: 9,
            flags: 2048,
            indexId: const obx_int.IdUid(7, 4735860562603714514)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 8587698246806716331),
            name: 'value',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(8, 7863331895491057739),
      name: 'ViewMetaEntity',
      lastPropertyId: const obx_int.IdUid(3, 6354903701505548316),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 4951339630311620382),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 7100843868053499823),
            name: 'key',
            type: 9,
            flags: 2048,
            indexId: const obx_int.IdUid(8, 6063552904137448282)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 6354903701505548316),
            name: 'value',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(9, 3150806615709479110),
      name: 'UtilsEntity',
      lastPropertyId: const obx_int.IdUid(3, 5411186115660847287),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 2186938649636581704),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 6753400030400865908),
            name: 'key',
            type: 9,
            flags: 2048,
            indexId: const obx_int.IdUid(9, 4336586824667827731)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 5411186115660847287),
            name: 'value',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(9, 3150806615709479110),
      lastIndexId: const obx_int.IdUid(9, 4336586824667827731),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    AllDocViewDocMetaEntity: obx_int.EntityDefinition<AllDocViewDocMetaEntity>(
        model: _entities[0],
        toOneRelations: (AllDocViewDocMetaEntity object) => [],
        toManyRelations: (AllDocViewDocMetaEntity object) => {},
        getId: (AllDocViewDocMetaEntity object) => object.id,
        setId: (AllDocViewDocMetaEntity object, int id) {
          object.id = id;
        },
        objectToFB: (AllDocViewDocMetaEntity object, fb.Builder fbb) {
          final keyOffset = fbb.writeString(object.key);
          final valueOffset = fbb.writeString(object.value);
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, keyOffset);
          fbb.addOffset(2, valueOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final keyParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final valueParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final object = AllDocViewDocMetaEntity(
              id: idParam, key: keyParam, value: valueParam);

          return object;
        }),
    AllDocViewKeyMetaEntity: obx_int.EntityDefinition<AllDocViewKeyMetaEntity>(
        model: _entities[1],
        toOneRelations: (AllDocViewKeyMetaEntity object) => [],
        toManyRelations: (AllDocViewKeyMetaEntity object) => {},
        getId: (AllDocViewKeyMetaEntity object) => object.id,
        setId: (AllDocViewKeyMetaEntity object, int id) {
          object.id = id;
        },
        objectToFB: (AllDocViewKeyMetaEntity object, fb.Builder fbb) {
          final keyOffset = fbb.writeString(object.key);
          final valueOffset = fbb.writeString(object.value);
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, keyOffset);
          fbb.addOffset(2, valueOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final keyParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final valueParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final object = AllDocViewKeyMetaEntity(
              id: idParam, key: keyParam, value: valueParam);

          return object;
        }),
    DocEntity: obx_int.EntityDefinition<DocEntity>(
        model: _entities[2],
        toOneRelations: (DocEntity object) => [],
        toManyRelations: (DocEntity object) => {},
        getId: (DocEntity object) => object.id,
        setId: (DocEntity object, int id) {
          object.id = id;
        },
        objectToFB: (DocEntity object, fb.Builder fbb) {
          final keyOffset = fbb.writeString(object.key);
          final valueOffset = fbb.writeString(object.value);
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, keyOffset);
          fbb.addOffset(2, valueOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final keyParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final valueParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final object =
              DocEntity(id: idParam, key: keyParam, value: valueParam);

          return object;
        }),
    LocalDocEntity: obx_int.EntityDefinition<LocalDocEntity>(
        model: _entities[3],
        toOneRelations: (LocalDocEntity object) => [],
        toManyRelations: (LocalDocEntity object) => {},
        getId: (LocalDocEntity object) => object.id,
        setId: (LocalDocEntity object, int id) {
          object.id = id;
        },
        objectToFB: (LocalDocEntity object, fb.Builder fbb) {
          final keyOffset = fbb.writeString(object.key);
          final valueOffset = fbb.writeString(object.value);
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, keyOffset);
          fbb.addOffset(2, valueOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final keyParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final valueParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final object =
              LocalDocEntity(id: idParam, key: keyParam, value: valueParam);

          return object;
        }),
    SequenceEntity: obx_int.EntityDefinition<SequenceEntity>(
        model: _entities[4],
        toOneRelations: (SequenceEntity object) => [],
        toManyRelations: (SequenceEntity object) => {},
        getId: (SequenceEntity object) => object.id,
        setId: (SequenceEntity object, int id) {
          object.id = id;
        },
        objectToFB: (SequenceEntity object, fb.Builder fbb) {
          final valueOffset = fbb.writeString(object.value);
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.key);
          fbb.addOffset(2, valueOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final keyParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0);
          final valueParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final object =
              SequenceEntity(id: idParam, key: keyParam, value: valueParam);

          return object;
        }),
    ViewDocMetaEntity: obx_int.EntityDefinition<ViewDocMetaEntity>(
        model: _entities[5],
        toOneRelations: (ViewDocMetaEntity object) => [],
        toManyRelations: (ViewDocMetaEntity object) => {},
        getId: (ViewDocMetaEntity object) => object.id,
        setId: (ViewDocMetaEntity object, int id) {
          object.id = id;
        },
        objectToFB: (ViewDocMetaEntity object, fb.Builder fbb) {
          final keyOffset = fbb.writeString(object.key);
          final valueOffset = fbb.writeString(object.value);
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, keyOffset);
          fbb.addOffset(2, valueOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final keyParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final valueParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final object =
              ViewDocMetaEntity(id: idParam, key: keyParam, value: valueParam);

          return object;
        }),
    ViewKeyMetaEntity: obx_int.EntityDefinition<ViewKeyMetaEntity>(
        model: _entities[6],
        toOneRelations: (ViewKeyMetaEntity object) => [],
        toManyRelations: (ViewKeyMetaEntity object) => {},
        getId: (ViewKeyMetaEntity object) => object.id,
        setId: (ViewKeyMetaEntity object, int id) {
          object.id = id;
        },
        objectToFB: (ViewKeyMetaEntity object, fb.Builder fbb) {
          final keyOffset = fbb.writeString(object.key);
          final valueOffset = fbb.writeString(object.value);
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, keyOffset);
          fbb.addOffset(2, valueOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final keyParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final valueParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final object =
              ViewKeyMetaEntity(id: idParam, key: keyParam, value: valueParam);

          return object;
        }),
    ViewMetaEntity: obx_int.EntityDefinition<ViewMetaEntity>(
        model: _entities[7],
        toOneRelations: (ViewMetaEntity object) => [],
        toManyRelations: (ViewMetaEntity object) => {},
        getId: (ViewMetaEntity object) => object.id,
        setId: (ViewMetaEntity object, int id) {
          object.id = id;
        },
        objectToFB: (ViewMetaEntity object, fb.Builder fbb) {
          final keyOffset = fbb.writeString(object.key);
          final valueOffset = fbb.writeString(object.value);
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, keyOffset);
          fbb.addOffset(2, valueOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final keyParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final valueParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final object =
              ViewMetaEntity(id: idParam, key: keyParam, value: valueParam);

          return object;
        }),
    UtilsEntity: obx_int.EntityDefinition<UtilsEntity>(
        model: _entities[8],
        toOneRelations: (UtilsEntity object) => [],
        toManyRelations: (UtilsEntity object) => {},
        getId: (UtilsEntity object) => object.id,
        setId: (UtilsEntity object, int id) {
          object.id = id;
        },
        objectToFB: (UtilsEntity object, fb.Builder fbb) {
          final keyOffset = fbb.writeString(object.key);
          final valueOffset = fbb.writeString(object.value);
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, keyOffset);
          fbb.addOffset(2, valueOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final keyParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final valueParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final object =
              UtilsEntity(id: idParam, key: keyParam, value: valueParam);

          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [AllDocViewDocMetaEntity] entity fields to define ObjectBox queries.
class AllDocViewDocMetaEntity_ {
  /// See [AllDocViewDocMetaEntity.id].
  static final id = obx.QueryIntegerProperty<AllDocViewDocMetaEntity>(
      _entities[0].properties[0]);

  /// See [AllDocViewDocMetaEntity.key].
  static final key = obx.QueryStringProperty<AllDocViewDocMetaEntity>(
      _entities[0].properties[1]);

  /// See [AllDocViewDocMetaEntity.value].
  static final value = obx.QueryStringProperty<AllDocViewDocMetaEntity>(
      _entities[0].properties[2]);
}

/// [AllDocViewKeyMetaEntity] entity fields to define ObjectBox queries.
class AllDocViewKeyMetaEntity_ {
  /// See [AllDocViewKeyMetaEntity.id].
  static final id = obx.QueryIntegerProperty<AllDocViewKeyMetaEntity>(
      _entities[1].properties[0]);

  /// See [AllDocViewKeyMetaEntity.key].
  static final key = obx.QueryStringProperty<AllDocViewKeyMetaEntity>(
      _entities[1].properties[1]);

  /// See [AllDocViewKeyMetaEntity.value].
  static final value = obx.QueryStringProperty<AllDocViewKeyMetaEntity>(
      _entities[1].properties[2]);
}

/// [DocEntity] entity fields to define ObjectBox queries.
class DocEntity_ {
  /// See [DocEntity.id].
  static final id =
      obx.QueryIntegerProperty<DocEntity>(_entities[2].properties[0]);

  /// See [DocEntity.key].
  static final key =
      obx.QueryStringProperty<DocEntity>(_entities[2].properties[1]);

  /// See [DocEntity.value].
  static final value =
      obx.QueryStringProperty<DocEntity>(_entities[2].properties[2]);
}

/// [LocalDocEntity] entity fields to define ObjectBox queries.
class LocalDocEntity_ {
  /// See [LocalDocEntity.id].
  static final id =
      obx.QueryIntegerProperty<LocalDocEntity>(_entities[3].properties[0]);

  /// See [LocalDocEntity.key].
  static final key =
      obx.QueryStringProperty<LocalDocEntity>(_entities[3].properties[1]);

  /// See [LocalDocEntity.value].
  static final value =
      obx.QueryStringProperty<LocalDocEntity>(_entities[3].properties[2]);
}

/// [SequenceEntity] entity fields to define ObjectBox queries.
class SequenceEntity_ {
  /// See [SequenceEntity.id].
  static final id =
      obx.QueryIntegerProperty<SequenceEntity>(_entities[4].properties[0]);

  /// See [SequenceEntity.key].
  static final key =
      obx.QueryIntegerProperty<SequenceEntity>(_entities[4].properties[1]);

  /// See [SequenceEntity.value].
  static final value =
      obx.QueryStringProperty<SequenceEntity>(_entities[4].properties[2]);
}

/// [ViewDocMetaEntity] entity fields to define ObjectBox queries.
class ViewDocMetaEntity_ {
  /// See [ViewDocMetaEntity.id].
  static final id =
      obx.QueryIntegerProperty<ViewDocMetaEntity>(_entities[5].properties[0]);

  /// See [ViewDocMetaEntity.key].
  static final key =
      obx.QueryStringProperty<ViewDocMetaEntity>(_entities[5].properties[1]);

  /// See [ViewDocMetaEntity.value].
  static final value =
      obx.QueryStringProperty<ViewDocMetaEntity>(_entities[5].properties[2]);
}

/// [ViewKeyMetaEntity] entity fields to define ObjectBox queries.
class ViewKeyMetaEntity_ {
  /// See [ViewKeyMetaEntity.id].
  static final id =
      obx.QueryIntegerProperty<ViewKeyMetaEntity>(_entities[6].properties[0]);

  /// See [ViewKeyMetaEntity.key].
  static final key =
      obx.QueryStringProperty<ViewKeyMetaEntity>(_entities[6].properties[1]);

  /// See [ViewKeyMetaEntity.value].
  static final value =
      obx.QueryStringProperty<ViewKeyMetaEntity>(_entities[6].properties[2]);
}

/// [ViewMetaEntity] entity fields to define ObjectBox queries.
class ViewMetaEntity_ {
  /// See [ViewMetaEntity.id].
  static final id =
      obx.QueryIntegerProperty<ViewMetaEntity>(_entities[7].properties[0]);

  /// See [ViewMetaEntity.key].
  static final key =
      obx.QueryStringProperty<ViewMetaEntity>(_entities[7].properties[1]);

  /// See [ViewMetaEntity.value].
  static final value =
      obx.QueryStringProperty<ViewMetaEntity>(_entities[7].properties[2]);
}

/// [UtilsEntity] entity fields to define ObjectBox queries.
class UtilsEntity_ {
  /// See [UtilsEntity.id].
  static final id =
      obx.QueryIntegerProperty<UtilsEntity>(_entities[8].properties[0]);

  /// See [UtilsEntity.key].
  static final key =
      obx.QueryStringProperty<UtilsEntity>(_entities[8].properties[1]);

  /// See [UtilsEntity.value].
  static final value =
      obx.QueryStringProperty<UtilsEntity>(_entities[8].properties[2]);
}
